GitHub workflow - Remote Repo
----------------------------------
Step 1 - Login to GitHub and create a new repo
- Always have a README.md file
- .gitignore is mandatory for code files only

Step 2- Clone the code library to your machine
- Our preferred method is https, but you can also set up an SSH key
- For https - ensure to use the key from the 1Password shared account
- For SSH, see the GitHub docs to generate your SSH key and associate it with your account
- Go to your home directory and add a folder Development. Next, create a subfolder for all the inflight projects; call it projects. This will host all the WIP code projects that you are working on. (Skip this step if this is not your first rodeo).
- Go to this folder and run git clone using the https/SSH
- Enter the user name and key (NOT Password)
(You just created a new folder pointing to your repo's main branch. The repo has the .git, .git ignore, and README.md files)
- because we use git clone, there is no need to use got init

Step 3 - Modified stage
- (Run git status to make sure that your working tree is clear before you start making modifications)
- Open in VSCode and add the files you need to add/chage
- Run git add . (or file_name). 
- if need to revert, use git restore --staged <file>

Step 4 - Staged stage
- git comiit -m "Message"
- use "git push" to publish your local commits

Step 5 - Committed Stage
- (Run git status to make sure that your working tree is clear before you start making modifications)
- Create a new branch by using git checkout -B <branch name> (create branch and move there)
- For branch names - use: 
    -   fix for bug fixes
    -   Update - for updates
    -   feature/name - for new features
- Use git branch to see where you are
- use git push -u origin <branch name> (move to the new branch)

Step 6 - Review and Merge
- open github.com
- Go to pull requests 
- Review the code 
 - Merge
 - Use git remote -v


 Github Workflow - Local Repo
 ------------------------------
 Step 1 - Initiate local Repo
 - Use mkdir and create a new folder
 - run git init from this folder

Step 2 - Connect to a remote repo
- use git remote add origin git@github.com:token/my-repo 
- Run git pull to get all recent updates
- Run git push origin main

